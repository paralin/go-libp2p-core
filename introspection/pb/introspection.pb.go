// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/libp2p/go-libp2p-core/introspection/pb/introspection.proto

package pb

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The status of a connection or stream.
type Status int32

const (
	Status_ACTIVE  Status = 0
	Status_CLOSED  Status = 1
	Status_OPENING Status = 2
	Status_CLOSING Status = 3
	Status_ERROR   Status = 4
)

var Status_name = map[int32]string{
	0: "ACTIVE",
	1: "CLOSED",
	2: "OPENING",
	3: "CLOSING",
	4: "ERROR",
}

var Status_value = map[string]int32{
	"ACTIVE":  0,
	"CLOSED":  1,
	"OPENING": 2,
	"CLOSING": 3,
	"ERROR":   4,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}

func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ce3f8b5eb3c3a1cf, []int{0}
}

// Our role in a connection or stream.
type Role int32

const (
	Role_INITIATOR Role = 0
	Role_RESPONDER Role = 1
)

var Role_name = map[int32]string{
	0: "INITIATOR",
	1: "RESPONDER",
}

var Role_value = map[string]int32{
	"INITIATOR": 0,
	"RESPONDER": 1,
}

func (x Role) String() string {
	return proto.EnumName(Role_name, int32(x))
}

func (Role) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ce3f8b5eb3c3a1cf, []int{1}
}

// tells client how to sort, filter or display known content properties
type EventType_EventProperty_PropertyType int32

const (
	// for properties to treat as a simple primitive
	EventType_EventProperty_STRING EventType_EventProperty_PropertyType = 0
	EventType_EventProperty_NUMBER EventType_EventProperty_PropertyType = 1
	// for properties with special human-readable formatting
	EventType_EventProperty_TIME      EventType_EventProperty_PropertyType = 10
	EventType_EventProperty_PEERID    EventType_EventProperty_PropertyType = 11
	EventType_EventProperty_MULTIADDR EventType_EventProperty_PropertyType = 12
	// for complex structures like nested arrays, object trees etc
	EventType_EventProperty_JSON EventType_EventProperty_PropertyType = 90
)

var EventType_EventProperty_PropertyType_name = map[int32]string{
	0:  "STRING",
	1:  "NUMBER",
	10: "TIME",
	11: "PEERID",
	12: "MULTIADDR",
	90: "JSON",
}

var EventType_EventProperty_PropertyType_value = map[string]int32{
	"STRING":    0,
	"NUMBER":    1,
	"TIME":      10,
	"PEERID":    11,
	"MULTIADDR": 12,
	"JSON":      90,
}

func (x EventType_EventProperty_PropertyType) String() string {
	return proto.EnumName(EventType_EventProperty_PropertyType_name, int32(x))
}

func (EventType_EventProperty_PropertyType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ce3f8b5eb3c3a1cf, []int{4, 0, 0}
}

// The DHT's relationship with this peer
type DHT_PeerInDHT_Status int32

const (
	// Connected, in a bucket, ready to send/receive queries
	DHT_PeerInDHT_ACTIVE DHT_PeerInDHT_Status = 0
	// Not currently connected, still "in" a bucket (e.g. temporarily disconnected)
	DHT_PeerInDHT_MISSING DHT_PeerInDHT_Status = 1
	// Removed from a bucket or candidate list (e.g. connection lost or too slow)
	DHT_PeerInDHT_REJECTED DHT_PeerInDHT_Status = 2
	// Was reachable when last checked, waiting to join a currently-full bucket
	DHT_PeerInDHT_CANDIDATE DHT_PeerInDHT_Status = 3
)

var DHT_PeerInDHT_Status_name = map[int32]string{
	0: "ACTIVE",
	1: "MISSING",
	2: "REJECTED",
	3: "CANDIDATE",
}

var DHT_PeerInDHT_Status_value = map[string]int32{
	"ACTIVE":    0,
	"MISSING":   1,
	"REJECTED":  2,
	"CANDIDATE": 3,
}

func (x DHT_PeerInDHT_Status) String() string {
	return proto.EnumName(DHT_PeerInDHT_Status_name, int32(x))
}

func (DHT_PeerInDHT_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ce3f8b5eb3c3a1cf, []int{11, 1, 0}
}

type ClientCommand_Source int32

const (
	ClientCommand_STATE   ClientCommand_Source = 0
	ClientCommand_RUNTIME ClientCommand_Source = 1
	ClientCommand_EVENTS  ClientCommand_Source = 2
)

var ClientCommand_Source_name = map[int32]string{
	0: "STATE",
	1: "RUNTIME",
	2: "EVENTS",
}

var ClientCommand_Source_value = map[string]int32{
	"STATE":   0,
	"RUNTIME": 1,
	"EVENTS":  2,
}

func (x ClientCommand_Source) String() string {
	return proto.EnumName(ClientCommand_Source_name, int32(x))
}

func (ClientCommand_Source) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ce3f8b5eb3c3a1cf, []int{17, 0}
}

type ClientCommand_Command int32

const (
	// HELLO is the first command that a client must send to greet the server.
	// Connections that do not respect this invariant will be terminated.
	ClientCommand_HELLO ClientCommand_Command = 0
	// REQUEST is applicable to STATE and RUNTIME sources.
	ClientCommand_REQUEST ClientCommand_Command = 1
	// PUSH streams can only be started for STATE and EVENTS sources.
	ClientCommand_PUSH_ENABLE  ClientCommand_Command = 2
	ClientCommand_PUSH_DISABLE ClientCommand_Command = 3
	ClientCommand_PUSH_PAUSE   ClientCommand_Command = 4
	ClientCommand_PUSH_RESUME  ClientCommand_Command = 5
	// UPDATE_CONFIG requests a configuration update. The config field is
	// compulsory.
	//
	// The server reserves the right to override the requested values, and
	// will return the effective configuration in the response.
	ClientCommand_UPDATE_CONFIG ClientCommand_Command = 7
)

var ClientCommand_Command_name = map[int32]string{
	0: "HELLO",
	1: "REQUEST",
	2: "PUSH_ENABLE",
	3: "PUSH_DISABLE",
	4: "PUSH_PAUSE",
	5: "PUSH_RESUME",
	7: "UPDATE_CONFIG",
}

var ClientCommand_Command_value = map[string]int32{
	"HELLO":         0,
	"REQUEST":       1,
	"PUSH_ENABLE":   2,
	"PUSH_DISABLE":  3,
	"PUSH_PAUSE":    4,
	"PUSH_RESUME":   5,
	"UPDATE_CONFIG": 7,
}

func (x ClientCommand_Command) String() string {
	return proto.EnumName(ClientCommand_Command_name, int32(x))
}

func (ClientCommand_Command) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ce3f8b5eb3c3a1cf, []int{17, 1}
}

type CommandResponse_Result int32

const (
	CommandResponse_OK  CommandResponse_Result = 0
	CommandResponse_ERR CommandResponse_Result = 1
)

var CommandResponse_Result_name = map[int32]string{
	0: "OK",
	1: "ERR",
}

var CommandResponse_Result_value = map[string]int32{
	"OK":  0,
	"ERR": 1,
}

func (x CommandResponse_Result) String() string {
	return proto.EnumName(CommandResponse_Result_name, int32(x))
}

func (CommandResponse_Result) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ce3f8b5eb3c3a1cf, []int{18, 0}
}

type ServerNotice_Kind int32

const (
	ServerNotice_DISCARDING_EVENTS ServerNotice_Kind = 0
)

var ServerNotice_Kind_name = map[int32]string{
	0: "DISCARDING_EVENTS",
}

var ServerNotice_Kind_value = map[string]int32{
	"DISCARDING_EVENTS": 0,
}

func (x ServerNotice_Kind) String() string {
	return proto.EnumName(ServerNotice_Kind_name, int32(x))
}

func (ServerNotice_Kind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ce3f8b5eb3c3a1cf, []int{19, 0}
}

// Version of schema
type Version struct {
	Version              uint32   `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Version) Reset()         { *m = Version{} }
func (m *Version) String() string { return proto.CompactTextString(m) }
func (*Version) ProtoMessage()    {}
func (*Version) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce3f8b5eb3c3a1cf, []int{0}
}

func (m *Version) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Version.Unmarshal(m, b)
}
func (m *Version) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Version.Marshal(b, m, deterministic)
}
func (m *Version) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Version.Merge(m, src)
}
func (m *Version) XXX_Size() int {
	return xxx_messageInfo_Version.Size(m)
}
func (m *Version) XXX_DiscardUnknown() {
	xxx_messageInfo_Version.DiscardUnknown(m)
}

var xxx_messageInfo_Version proto.InternalMessageInfo

func (m *Version) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

// ResultCounter is a monotonically increasing counter that reports an ok/err breakdown of the total.
type ResultCounter struct {
	Total                uint32   `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Ok                   uint32   `protobuf:"varint,2,opt,name=ok,proto3" json:"ok,omitempty"`
	Err                  uint32   `protobuf:"varint,3,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResultCounter) Reset()         { *m = ResultCounter{} }
func (m *ResultCounter) String() string { return proto.CompactTextString(m) }
func (*ResultCounter) ProtoMessage()    {}
func (*ResultCounter) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce3f8b5eb3c3a1cf, []int{1}
}

func (m *ResultCounter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResultCounter.Unmarshal(m, b)
}
func (m *ResultCounter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResultCounter.Marshal(b, m, deterministic)
}
func (m *ResultCounter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResultCounter.Merge(m, src)
}
func (m *ResultCounter) XXX_Size() int {
	return xxx_messageInfo_ResultCounter.Size(m)
}
func (m *ResultCounter) XXX_DiscardUnknown() {
	xxx_messageInfo_ResultCounter.DiscardUnknown(m)
}

var xxx_messageInfo_ResultCounter proto.InternalMessageInfo

func (m *ResultCounter) GetTotal() uint32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *ResultCounter) GetOk() uint32 {
	if m != nil {
		return m.Ok
	}
	return 0
}

func (m *ResultCounter) GetErr() uint32 {
	if m != nil {
		return m.Err
	}
	return 0
}

// Moving totals over sliding time windows. Models sensible time windows,
// we don't have to populate them all at once.
//
// Graphical example:
//
// time     past -> present                              an event 16 min ago
// ======================================================X================>>
//                                                       |               | 1m
//                                                       |           |---| 5m
//                                                       | |-------------| 15m
//                                          |------------X---------------| 30m
//            |------------------------------------------X---------------| 60m
type SlidingCounter struct {
	Over_1M              uint32   `protobuf:"varint,1,opt,name=over_1m,json=over1m,proto3" json:"over_1m,omitempty"`
	Over_5M              uint32   `protobuf:"varint,2,opt,name=over_5m,json=over5m,proto3" json:"over_5m,omitempty"`
	Over_15M             uint32   `protobuf:"varint,3,opt,name=over_15m,json=over15m,proto3" json:"over_15m,omitempty"`
	Over_30M             uint32   `protobuf:"varint,4,opt,name=over_30m,json=over30m,proto3" json:"over_30m,omitempty"`
	Over_1Hr             uint32   `protobuf:"varint,5,opt,name=over_1hr,json=over1hr,proto3" json:"over_1hr,omitempty"`
	Over_2Hr             uint32   `protobuf:"varint,6,opt,name=over_2hr,json=over2hr,proto3" json:"over_2hr,omitempty"`
	Over_4Hr             uint32   `protobuf:"varint,7,opt,name=over_4hr,json=over4hr,proto3" json:"over_4hr,omitempty"`
	Over_8Hr             uint32   `protobuf:"varint,8,opt,name=over_8hr,json=over8hr,proto3" json:"over_8hr,omitempty"`
	Over_12Hr            uint32   `protobuf:"varint,9,opt,name=over_12hr,json=over12hr,proto3" json:"over_12hr,omitempty"`
	Over_24Hr            uint32   `protobuf:"varint,10,opt,name=over_24hr,json=over24hr,proto3" json:"over_24hr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SlidingCounter) Reset()         { *m = SlidingCounter{} }
func (m *SlidingCounter) String() string { return proto.CompactTextString(m) }
func (*SlidingCounter) ProtoMessage()    {}
func (*SlidingCounter) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce3f8b5eb3c3a1cf, []int{2}
}

func (m *SlidingCounter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SlidingCounter.Unmarshal(m, b)
}
func (m *SlidingCounter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SlidingCounter.Marshal(b, m, deterministic)
}
func (m *SlidingCounter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SlidingCounter.Merge(m, src)
}
func (m *SlidingCounter) XXX_Size() int {
	return xxx_messageInfo_SlidingCounter.Size(m)
}
func (m *SlidingCounter) XXX_DiscardUnknown() {
	xxx_messageInfo_SlidingCounter.DiscardUnknown(m)
}

var xxx_messageInfo_SlidingCounter proto.InternalMessageInfo

func (m *SlidingCounter) GetOver_1M() uint32 {
	if m != nil {
		return m.Over_1M
	}
	return 0
}

func (m *SlidingCounter) GetOver_5M() uint32 {
	if m != nil {
		return m.Over_5M
	}
	return 0
}

func (m *SlidingCounter) GetOver_15M() uint32 {
	if m != nil {
		return m.Over_15M
	}
	return 0
}

func (m *SlidingCounter) GetOver_30M() uint32 {
	if m != nil {
		return m.Over_30M
	}
	return 0
}

func (m *SlidingCounter) GetOver_1Hr() uint32 {
	if m != nil {
		return m.Over_1Hr
	}
	return 0
}

func (m *SlidingCounter) GetOver_2Hr() uint32 {
	if m != nil {
		return m.Over_2Hr
	}
	return 0
}

func (m *SlidingCounter) GetOver_4Hr() uint32 {
	if m != nil {
		return m.Over_4Hr
	}
	return 0
}

func (m *SlidingCounter) GetOver_8Hr() uint32 {
	if m != nil {
		return m.Over_8Hr
	}
	return 0
}

func (m *SlidingCounter) GetOver_12Hr() uint32 {
	if m != nil {
		return m.Over_12Hr
	}
	return 0
}

func (m *SlidingCounter) GetOver_24Hr() uint32 {
	if m != nil {
		return m.Over_24Hr
	}
	return 0
}

// DataGauge reports stats for data traffic in a given direction.
type DataGauge struct {
	// Cumulative bytes.
	CumBytes uint64 `protobuf:"varint,1,opt,name=cum_bytes,json=cumBytes,proto3" json:"cum_bytes,omitempty"`
	// Cumulative packets.
	CumPackets uint64 `protobuf:"varint,2,opt,name=cum_packets,json=cumPackets,proto3" json:"cum_packets,omitempty"`
	// Instantaneous bandwidth measurement (bytes/second).
	InstBw               uint64   `protobuf:"varint,3,opt,name=inst_bw,json=instBw,proto3" json:"inst_bw,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DataGauge) Reset()         { *m = DataGauge{} }
func (m *DataGauge) String() string { return proto.CompactTextString(m) }
func (*DataGauge) ProtoMessage()    {}
func (*DataGauge) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce3f8b5eb3c3a1cf, []int{3}
}

func (m *DataGauge) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataGauge.Unmarshal(m, b)
}
func (m *DataGauge) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataGauge.Marshal(b, m, deterministic)
}
func (m *DataGauge) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataGauge.Merge(m, src)
}
func (m *DataGauge) XXX_Size() int {
	return xxx_messageInfo_DataGauge.Size(m)
}
func (m *DataGauge) XXX_DiscardUnknown() {
	xxx_messageInfo_DataGauge.DiscardUnknown(m)
}

var xxx_messageInfo_DataGauge proto.InternalMessageInfo

func (m *DataGauge) GetCumBytes() uint64 {
	if m != nil {
		return m.CumBytes
	}
	return 0
}

func (m *DataGauge) GetCumPackets() uint64 {
	if m != nil {
		return m.CumPackets
	}
	return 0
}

func (m *DataGauge) GetInstBw() uint64 {
	if m != nil {
		return m.InstBw
	}
	return 0
}

// describes a type of event
type EventType struct {
	// name of event type, e.g. PeerConnecting
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// for runtime, send property_types for all events already seen in events list
	// for events, only send property_types in the first event of a type not in runtime
	PropertyTypes        []*EventType_EventProperty `protobuf:"bytes,2,rep,name=property_types,json=propertyTypes,proto3" json:"property_types,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *EventType) Reset()         { *m = EventType{} }
func (m *EventType) String() string { return proto.CompactTextString(m) }
func (*EventType) ProtoMessage()    {}
func (*EventType) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce3f8b5eb3c3a1cf, []int{4}
}

func (m *EventType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventType.Unmarshal(m, b)
}
func (m *EventType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventType.Marshal(b, m, deterministic)
}
func (m *EventType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventType.Merge(m, src)
}
func (m *EventType) XXX_Size() int {
	return xxx_messageInfo_EventType.Size(m)
}
func (m *EventType) XXX_DiscardUnknown() {
	xxx_messageInfo_EventType.DiscardUnknown(m)
}

var xxx_messageInfo_EventType proto.InternalMessageInfo

func (m *EventType) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *EventType) GetPropertyTypes() []*EventType_EventProperty {
	if m != nil {
		return m.PropertyTypes
	}
	return nil
}

// metadata about content types in event's top-level content JSON
type EventType_EventProperty struct {
	// property name of content e.g. openTs
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// type to interpret content value as
	Type EventType_EventProperty_PropertyType `protobuf:"varint,2,opt,name=type,proto3,enum=pb.EventType_EventProperty_PropertyType" json:"type,omitempty"`
	// if true, expect an array of values of `type`; else, singular
	HasMultiple          bool     `protobuf:"varint,3,opt,name=has_multiple,json=hasMultiple,proto3" json:"has_multiple,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventType_EventProperty) Reset()         { *m = EventType_EventProperty{} }
func (m *EventType_EventProperty) String() string { return proto.CompactTextString(m) }
func (*EventType_EventProperty) ProtoMessage()    {}
func (*EventType_EventProperty) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce3f8b5eb3c3a1cf, []int{4, 0}
}

func (m *EventType_EventProperty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventType_EventProperty.Unmarshal(m, b)
}
func (m *EventType_EventProperty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventType_EventProperty.Marshal(b, m, deterministic)
}
func (m *EventType_EventProperty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventType_EventProperty.Merge(m, src)
}
func (m *EventType_EventProperty) XXX_Size() int {
	return xxx_messageInfo_EventType_EventProperty.Size(m)
}
func (m *EventType_EventProperty) XXX_DiscardUnknown() {
	xxx_messageInfo_EventType_EventProperty.DiscardUnknown(m)
}

var xxx_messageInfo_EventType_EventProperty proto.InternalMessageInfo

func (m *EventType_EventProperty) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *EventType_EventProperty) GetType() EventType_EventProperty_PropertyType {
	if m != nil {
		return m.Type
	}
	return EventType_EventProperty_STRING
}

func (m *EventType_EventProperty) GetHasMultiple() bool {
	if m != nil {
		return m.HasMultiple
	}
	return false
}

// Runtime encapsulates runtime info about a node.
type Runtime struct {
	// e.g. go-libp2p, js-libp2p, rust-libp2p, etc.
	Implementation string `protobuf:"bytes,1,opt,name=implementation,proto3" json:"implementation,omitempty"`
	// e.g. 1.2.3.
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	// e.g. Windows, Unix, macOS, Chrome, Mozilla, etc.
	Platform string `protobuf:"bytes,3,opt,name=platform,proto3" json:"platform,omitempty"`
	// our peer id - the peer id of the host system
	PeerId string `protobuf:"bytes,4,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
	// metadata describing configured event types
	EventTypes           []*EventType `protobuf:"bytes,7,rep,name=event_types,json=eventTypes,proto3" json:"event_types,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Runtime) Reset()         { *m = Runtime{} }
func (m *Runtime) String() string { return proto.CompactTextString(m) }
func (*Runtime) ProtoMessage()    {}
func (*Runtime) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce3f8b5eb3c3a1cf, []int{5}
}

func (m *Runtime) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Runtime.Unmarshal(m, b)
}
func (m *Runtime) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Runtime.Marshal(b, m, deterministic)
}
func (m *Runtime) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Runtime.Merge(m, src)
}
func (m *Runtime) XXX_Size() int {
	return xxx_messageInfo_Runtime.Size(m)
}
func (m *Runtime) XXX_DiscardUnknown() {
	xxx_messageInfo_Runtime.DiscardUnknown(m)
}

var xxx_messageInfo_Runtime proto.InternalMessageInfo

func (m *Runtime) GetImplementation() string {
	if m != nil {
		return m.Implementation
	}
	return ""
}

func (m *Runtime) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Runtime) GetPlatform() string {
	if m != nil {
		return m.Platform
	}
	return ""
}

func (m *Runtime) GetPeerId() string {
	if m != nil {
		return m.PeerId
	}
	return ""
}

func (m *Runtime) GetEventTypes() []*EventType {
	if m != nil {
		return m.EventTypes
	}
	return nil
}

// EndpointPair is a pair of multiaddrs.
type EndpointPair struct {
	// the source multiaddr.
	SrcMultiaddr string `protobuf:"bytes,1,opt,name=src_multiaddr,json=srcMultiaddr,proto3" json:"src_multiaddr,omitempty"`
	// the destination multiaddr.
	DstMultiaddr         string   `protobuf:"bytes,2,opt,name=dst_multiaddr,json=dstMultiaddr,proto3" json:"dst_multiaddr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EndpointPair) Reset()         { *m = EndpointPair{} }
func (m *EndpointPair) String() string { return proto.CompactTextString(m) }
func (*EndpointPair) ProtoMessage()    {}
func (*EndpointPair) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce3f8b5eb3c3a1cf, []int{6}
}

func (m *EndpointPair) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EndpointPair.Unmarshal(m, b)
}
func (m *EndpointPair) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EndpointPair.Marshal(b, m, deterministic)
}
func (m *EndpointPair) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EndpointPair.Merge(m, src)
}
func (m *EndpointPair) XXX_Size() int {
	return xxx_messageInfo_EndpointPair.Size(m)
}
func (m *EndpointPair) XXX_DiscardUnknown() {
	xxx_messageInfo_EndpointPair.DiscardUnknown(m)
}

var xxx_messageInfo_EndpointPair proto.InternalMessageInfo

func (m *EndpointPair) GetSrcMultiaddr() string {
	if m != nil {
		return m.SrcMultiaddr
	}
	return ""
}

func (m *EndpointPair) GetDstMultiaddr() string {
	if m != nil {
		return m.DstMultiaddr
	}
	return ""
}

// Traffic encloses data transfer statistics.
type Traffic struct {
	// snapshot of the data in metrics.
	TrafficIn *DataGauge `protobuf:"bytes,1,opt,name=traffic_in,json=trafficIn,proto3" json:"traffic_in,omitempty"`
	// snapshot of the data out metrics.
	TrafficOut           *DataGauge `protobuf:"bytes,2,opt,name=traffic_out,json=trafficOut,proto3" json:"traffic_out,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Traffic) Reset()         { *m = Traffic{} }
func (m *Traffic) String() string { return proto.CompactTextString(m) }
func (*Traffic) ProtoMessage()    {}
func (*Traffic) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce3f8b5eb3c3a1cf, []int{7}
}

func (m *Traffic) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Traffic.Unmarshal(m, b)
}
func (m *Traffic) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Traffic.Marshal(b, m, deterministic)
}
func (m *Traffic) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Traffic.Merge(m, src)
}
func (m *Traffic) XXX_Size() int {
	return xxx_messageInfo_Traffic.Size(m)
}
func (m *Traffic) XXX_DiscardUnknown() {
	xxx_messageInfo_Traffic.DiscardUnknown(m)
}

var xxx_messageInfo_Traffic proto.InternalMessageInfo

func (m *Traffic) GetTrafficIn() *DataGauge {
	if m != nil {
		return m.TrafficIn
	}
	return nil
}

func (m *Traffic) GetTrafficOut() *DataGauge {
	if m != nil {
		return m.TrafficOut
	}
	return nil
}

// a list of streams, by reference or inlined.
type StreamList struct {
	// NOTE: only one of the next 2 fields can appear, but proto3
	// doesn't support combining oneof and repeated.
	//
	// streams within this connection by reference.
	StreamIds [][]byte `protobuf:"bytes,1,rep,name=stream_ids,json=streamIds,proto3" json:"stream_ids,omitempty"`
	// streams within this connection by inlining.
	Streams              []*Stream `protobuf:"bytes,2,rep,name=streams,proto3" json:"streams,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *StreamList) Reset()         { *m = StreamList{} }
func (m *StreamList) String() string { return proto.CompactTextString(m) }
func (*StreamList) ProtoMessage()    {}
func (*StreamList) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce3f8b5eb3c3a1cf, []int{8}
}

func (m *StreamList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamList.Unmarshal(m, b)
}
func (m *StreamList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamList.Marshal(b, m, deterministic)
}
func (m *StreamList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamList.Merge(m, src)
}
func (m *StreamList) XXX_Size() int {
	return xxx_messageInfo_StreamList.Size(m)
}
func (m *StreamList) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamList.DiscardUnknown(m)
}

var xxx_messageInfo_StreamList proto.InternalMessageInfo

func (m *StreamList) GetStreamIds() [][]byte {
	if m != nil {
		return m.StreamIds
	}
	return nil
}

func (m *StreamList) GetStreams() []*Stream {
	if m != nil {
		return m.Streams
	}
	return nil
}

// Connection reports metrics and state of a libp2p connection.
type Connection struct {
	// the id of this connection, not to be shown in user tooling,
	// used for (cross)referencing connections (e.g. relay).
	Id []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// the peer id of the other party.
	PeerId string `protobuf:"bytes,2,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
	// the status of this connection.
	Status Status `protobuf:"varint,3,opt,name=status,proto3,enum=pb.Status" json:"status,omitempty"`
	// a reference to the transport managing this connection.
	TransportId []byte `protobuf:"bytes,4,opt,name=transport_id,json=transportId,proto3" json:"transport_id,omitempty"`
	// the endpoints participating in this connection.
	Endpoints *EndpointPair `protobuf:"bytes,5,opt,name=endpoints,proto3" json:"endpoints,omitempty"`
	// the timeline of the connection, see Connection.Timeline.
	Timeline *Connection_Timeline `protobuf:"bytes,6,opt,name=timeline,proto3" json:"timeline,omitempty"`
	// our role in this connection.
	Role Role `protobuf:"varint,7,opt,name=role,proto3,enum=pb.Role" json:"role,omitempty"`
	// traffic statistics.
	Traffic *Traffic `protobuf:"bytes,8,opt,name=traffic,proto3" json:"traffic,omitempty"`
	// properties of this connection.
	Attribs *Connection_Attributes `protobuf:"bytes,9,opt,name=attribs,proto3" json:"attribs,omitempty"`
	// the instantaneous latency of this connection in nanoseconds.
	LatencyNs uint64 `protobuf:"varint,10,opt,name=latency_ns,json=latencyNs,proto3" json:"latency_ns,omitempty"`
	// streams within this connection.
	Streams *StreamList `protobuf:"bytes,11,opt,name=streams,proto3" json:"streams,omitempty"`
	// if this is a relayed connection, this points to the relaying connection.
	// a default value here (empty bytes) indicates this is not a relayed connection.
	//
	// Types that are valid to be assigned to RelayedOver:
	//	*Connection_ConnId
	//	*Connection_Conn
	RelayedOver isConnection_RelayedOver `protobuf_oneof:"relayed_over"`
	// user provided tags.
	UserProvidedTags     []string `protobuf:"bytes,99,rep,name=user_provided_tags,json=userProvidedTags,proto3" json:"user_provided_tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Connection) Reset()         { *m = Connection{} }
func (m *Connection) String() string { return proto.CompactTextString(m) }
func (*Connection) ProtoMessage()    {}
func (*Connection) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce3f8b5eb3c3a1cf, []int{9}
}

func (m *Connection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Connection.Unmarshal(m, b)
}
func (m *Connection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Connection.Marshal(b, m, deterministic)
}
func (m *Connection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Connection.Merge(m, src)
}
func (m *Connection) XXX_Size() int {
	return xxx_messageInfo_Connection.Size(m)
}
func (m *Connection) XXX_DiscardUnknown() {
	xxx_messageInfo_Connection.DiscardUnknown(m)
}

var xxx_messageInfo_Connection proto.InternalMessageInfo

func (m *Connection) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Connection) GetPeerId() string {
	if m != nil {
		return m.PeerId
	}
	return ""
}

func (m *Connection) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_ACTIVE
}

func (m *Connection) GetTransportId() []byte {
	if m != nil {
		return m.TransportId
	}
	return nil
}

func (m *Connection) GetEndpoints() *EndpointPair {
	if m != nil {
		return m.Endpoints
	}
	return nil
}

func (m *Connection) GetTimeline() *Connection_Timeline {
	if m != nil {
		return m.Timeline
	}
	return nil
}

func (m *Connection) GetRole() Role {
	if m != nil {
		return m.Role
	}
	return Role_INITIATOR
}

func (m *Connection) GetTraffic() *Traffic {
	if m != nil {
		return m.Traffic
	}
	return nil
}

func (m *Connection) GetAttribs() *Connection_Attributes {
	if m != nil {
		return m.Attribs
	}
	return nil
}

func (m *Connection) GetLatencyNs() uint64 {
	if m != nil {
		return m.LatencyNs
	}
	return 0
}

func (m *Connection) GetStreams() *StreamList {
	if m != nil {
		return m.Streams
	}
	return nil
}

type isConnection_RelayedOver interface {
	isConnection_RelayedOver()
}

type Connection_ConnId struct {
	ConnId []byte `protobuf:"bytes,16,opt,name=conn_id,json=connId,proto3,oneof"`
}

type Connection_Conn struct {
	Conn *Connection `protobuf:"bytes,17,opt,name=conn,proto3,oneof"`
}

func (*Connection_ConnId) isConnection_RelayedOver() {}

func (*Connection_Conn) isConnection_RelayedOver() {}

func (m *Connection) GetRelayedOver() isConnection_RelayedOver {
	if m != nil {
		return m.RelayedOver
	}
	return nil
}

func (m *Connection) GetConnId() []byte {
	if x, ok := m.GetRelayedOver().(*Connection_ConnId); ok {
		return x.ConnId
	}
	return nil
}

func (m *Connection) GetConn() *Connection {
	if x, ok := m.GetRelayedOver().(*Connection_Conn); ok {
		return x.Conn
	}
	return nil
}

func (m *Connection) GetUserProvidedTags() []string {
	if m != nil {
		return m.UserProvidedTags
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Connection) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Connection_ConnId)(nil),
		(*Connection_Conn)(nil),
	}
}

// Timeline contains the timestamps (ms since epoch) of the well-known milestones of a connection.
type Connection_Timeline struct {
	// the instant when a connection was opened on the wire.
	OpenTs uint64 `protobuf:"varint,1,opt,name=open_ts,json=openTs,proto3" json:"open_ts,omitempty"`
	// the instant when the upgrade process (handshake, security, multiplexing) finished.
	UpgradedTs uint64 `protobuf:"varint,2,opt,name=upgraded_ts,json=upgradedTs,proto3" json:"upgraded_ts,omitempty"`
	// the instant when this connection was terminated.
	CloseTs              uint64   `protobuf:"varint,3,opt,name=close_ts,json=closeTs,proto3" json:"close_ts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Connection_Timeline) Reset()         { *m = Connection_Timeline{} }
func (m *Connection_Timeline) String() string { return proto.CompactTextString(m) }
func (*Connection_Timeline) ProtoMessage()    {}
func (*Connection_Timeline) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce3f8b5eb3c3a1cf, []int{9, 0}
}

func (m *Connection_Timeline) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Connection_Timeline.Unmarshal(m, b)
}
func (m *Connection_Timeline) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Connection_Timeline.Marshal(b, m, deterministic)
}
func (m *Connection_Timeline) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Connection_Timeline.Merge(m, src)
}
func (m *Connection_Timeline) XXX_Size() int {
	return xxx_messageInfo_Connection_Timeline.Size(m)
}
func (m *Connection_Timeline) XXX_DiscardUnknown() {
	xxx_messageInfo_Connection_Timeline.DiscardUnknown(m)
}

var xxx_messageInfo_Connection_Timeline proto.InternalMessageInfo

func (m *Connection_Timeline) GetOpenTs() uint64 {
	if m != nil {
		return m.OpenTs
	}
	return 0
}

func (m *Connection_Timeline) GetUpgradedTs() uint64 {
	if m != nil {
		return m.UpgradedTs
	}
	return 0
}

func (m *Connection_Timeline) GetCloseTs() uint64 {
	if m != nil {
		return m.CloseTs
	}
	return 0
}

// Attributes encapsulates the attributes of this connection.
type Connection_Attributes struct {
	// the multiplexer being used.
	Multiplexer string `protobuf:"bytes,1,opt,name=multiplexer,proto3" json:"multiplexer,omitempty"`
	// the encryption method being used.
	Encryption           string   `protobuf:"bytes,2,opt,name=encryption,proto3" json:"encryption,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Connection_Attributes) Reset()         { *m = Connection_Attributes{} }
func (m *Connection_Attributes) String() string { return proto.CompactTextString(m) }
func (*Connection_Attributes) ProtoMessage()    {}
func (*Connection_Attributes) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce3f8b5eb3c3a1cf, []int{9, 1}
}

func (m *Connection_Attributes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Connection_Attributes.Unmarshal(m, b)
}
func (m *Connection_Attributes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Connection_Attributes.Marshal(b, m, deterministic)
}
func (m *Connection_Attributes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Connection_Attributes.Merge(m, src)
}
func (m *Connection_Attributes) XXX_Size() int {
	return xxx_messageInfo_Connection_Attributes.Size(m)
}
func (m *Connection_Attributes) XXX_DiscardUnknown() {
	xxx_messageInfo_Connection_Attributes.DiscardUnknown(m)
}

var xxx_messageInfo_Connection_Attributes proto.InternalMessageInfo

func (m *Connection_Attributes) GetMultiplexer() string {
	if m != nil {
		return m.Multiplexer
	}
	return ""
}

func (m *Connection_Attributes) GetEncryption() string {
	if m != nil {
		return m.Encryption
	}
	return ""
}

// Stream reports metrics and state of a libp2p stream.
type Stream struct {
	// the id of this stream, not to be shown in user tooling,
	// used for (cross)referencing streams.
	Id []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// the protocol pinned to this stream.
	Protocol string `protobuf:"bytes,2,opt,name=protocol,proto3" json:"protocol,omitempty"`
	// our role in this stream.
	Role Role `protobuf:"varint,3,opt,name=role,proto3,enum=pb.Role" json:"role,omitempty"`
	// traffic statistics.
	Traffic *Traffic `protobuf:"bytes,4,opt,name=traffic,proto3" json:"traffic,omitempty"`
	// the connection this stream is hosted under.
	Conn *Stream_ConnectionRef `protobuf:"bytes,5,opt,name=conn,proto3" json:"conn,omitempty"`
	// the timeline of the stream, see Stream.Timeline.
	Timeline *Stream_Timeline `protobuf:"bytes,6,opt,name=timeline,proto3" json:"timeline,omitempty"`
	// the status of this stream.
	Status Status `protobuf:"varint,7,opt,name=status,proto3,enum=pb.Status" json:"status,omitempty"`
	// the instantaneous latency of this stream in nanoseconds.
	// TODO: this is hard to calculate.
	LatencyNs uint64 `protobuf:"varint,16,opt,name=latency_ns,json=latencyNs,proto3" json:"latency_ns,omitempty"`
	// user provided tags.
	UserProvidedTags     []string `protobuf:"bytes,99,rep,name=user_provided_tags,json=userProvidedTags,proto3" json:"user_provided_tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Stream) Reset()         { *m = Stream{} }
func (m *Stream) String() string { return proto.CompactTextString(m) }
func (*Stream) ProtoMessage()    {}
func (*Stream) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce3f8b5eb3c3a1cf, []int{10}
}

func (m *Stream) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Stream.Unmarshal(m, b)
}
func (m *Stream) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Stream.Marshal(b, m, deterministic)
}
func (m *Stream) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Stream.Merge(m, src)
}
func (m *Stream) XXX_Size() int {
	return xxx_messageInfo_Stream.Size(m)
}
func (m *Stream) XXX_DiscardUnknown() {
	xxx_messageInfo_Stream.DiscardUnknown(m)
}

var xxx_messageInfo_Stream proto.InternalMessageInfo

func (m *Stream) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Stream) GetProtocol() string {
	if m != nil {
		return m.Protocol
	}
	return ""
}

func (m *Stream) GetRole() Role {
	if m != nil {
		return m.Role
	}
	return Role_INITIATOR
}

func (m *Stream) GetTraffic() *Traffic {
	if m != nil {
		return m.Traffic
	}
	return nil
}

func (m *Stream) GetConn() *Stream_ConnectionRef {
	if m != nil {
		return m.Conn
	}
	return nil
}

func (m *Stream) GetTimeline() *Stream_Timeline {
	if m != nil {
		return m.Timeline
	}
	return nil
}

func (m *Stream) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_ACTIVE
}

func (m *Stream) GetLatencyNs() uint64 {
	if m != nil {
		return m.LatencyNs
	}
	return 0
}

func (m *Stream) GetUserProvidedTags() []string {
	if m != nil {
		return m.UserProvidedTags
	}
	return nil
}

type Stream_ConnectionRef struct {
	// Types that are valid to be assigned to Connection:
	//	*Stream_ConnectionRef_Conn
	//	*Stream_ConnectionRef_ConnId
	Connection           isStream_ConnectionRef_Connection `protobuf_oneof:"connection"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *Stream_ConnectionRef) Reset()         { *m = Stream_ConnectionRef{} }
func (m *Stream_ConnectionRef) String() string { return proto.CompactTextString(m) }
func (*Stream_ConnectionRef) ProtoMessage()    {}
func (*Stream_ConnectionRef) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce3f8b5eb3c3a1cf, []int{10, 0}
}

func (m *Stream_ConnectionRef) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Stream_ConnectionRef.Unmarshal(m, b)
}
func (m *Stream_ConnectionRef) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Stream_ConnectionRef.Marshal(b, m, deterministic)
}
func (m *Stream_ConnectionRef) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Stream_ConnectionRef.Merge(m, src)
}
func (m *Stream_ConnectionRef) XXX_Size() int {
	return xxx_messageInfo_Stream_ConnectionRef.Size(m)
}
func (m *Stream_ConnectionRef) XXX_DiscardUnknown() {
	xxx_messageInfo_Stream_ConnectionRef.DiscardUnknown(m)
}

var xxx_messageInfo_Stream_ConnectionRef proto.InternalMessageInfo

type isStream_ConnectionRef_Connection interface {
	isStream_ConnectionRef_Connection()
}

type Stream_ConnectionRef_Conn struct {
	Conn *Connection `protobuf:"bytes,1,opt,name=conn,proto3,oneof"`
}

type Stream_ConnectionRef_ConnId struct {
	ConnId []byte `protobuf:"bytes,2,opt,name=conn_id,json=connId,proto3,oneof"`
}

func (*Stream_ConnectionRef_Conn) isStream_ConnectionRef_Connection() {}

func (*Stream_ConnectionRef_ConnId) isStream_ConnectionRef_Connection() {}

func (m *Stream_ConnectionRef) GetConnection() isStream_ConnectionRef_Connection {
	if m != nil {
		return m.Connection
	}
	return nil
}

func (m *Stream_ConnectionRef) GetConn() *Connection {
	if x, ok := m.GetConnection().(*Stream_ConnectionRef_Conn); ok {
		return x.Conn
	}
	return nil
}

func (m *Stream_ConnectionRef) GetConnId() []byte {
	if x, ok := m.GetConnection().(*Stream_ConnectionRef_ConnId); ok {
		return x.ConnId
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Stream_ConnectionRef) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Stream_ConnectionRef_Conn)(nil),
		(*Stream_ConnectionRef_ConnId)(nil),
	}
}

// Timeline contains the timestamps (ms since epoch) of the well-known milestones of a stream.
type Stream_Timeline struct {
	// the instant when the stream was opened.
	OpenTs uint64 `protobuf:"varint,1,opt,name=open_ts,json=openTs,proto3" json:"open_ts,omitempty"`
	// the instant when the stream was terminated.
	CloseTs              uint64   `protobuf:"varint,2,opt,name=close_ts,json=closeTs,proto3" json:"close_ts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Stream_Timeline) Reset()         { *m = Stream_Timeline{} }
func (m *Stream_Timeline) String() string { return proto.CompactTextString(m) }
func (*Stream_Timeline) ProtoMessage()    {}
func (*Stream_Timeline) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce3f8b5eb3c3a1cf, []int{10, 1}
}

func (m *Stream_Timeline) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Stream_Timeline.Unmarshal(m, b)
}
func (m *Stream_Timeline) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Stream_Timeline.Marshal(b, m, deterministic)
}
func (m *Stream_Timeline) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Stream_Timeline.Merge(m, src)
}
func (m *Stream_Timeline) XXX_Size() int {
	return xxx_messageInfo_Stream_Timeline.Size(m)
}
func (m *Stream_Timeline) XXX_DiscardUnknown() {
	xxx_messageInfo_Stream_Timeline.DiscardUnknown(m)
}

var xxx_messageInfo_Stream_Timeline proto.InternalMessageInfo

func (m *Stream_Timeline) GetOpenTs() uint64 {
	if m != nil {
		return m.OpenTs
	}
	return 0
}

func (m *Stream_Timeline) GetCloseTs() uint64 {
	if m != nil {
		return m.CloseTs
	}
	return 0
}

// DHT metrics and state.
type DHT struct {
	// DHT protocol name
	Protocol string `protobuf:"bytes,1,opt,name=protocol,proto3" json:"protocol,omitempty"`
	// protocol enabled.
	Enabled bool `protobuf:"varint,2,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// timestamp (ms since epoch) of start up.
	StartTs uint64 `protobuf:"varint,3,opt,name=start_ts,json=startTs,proto3" json:"start_ts,omitempty"`
	// params of the dht.
	Params *DHT_Params `protobuf:"bytes,4,opt,name=params,proto3" json:"params,omitempty"`
	// existing, intantiated buckets and their contents
	Buckets []*DHT_Bucket `protobuf:"bytes,5,rep,name=buckets,proto3" json:"buckets,omitempty"`
	// counts inbound queries received from other peers
	IncomingQueries *DHT_QueryGauge `protobuf:"bytes,6,opt,name=incoming_queries,json=incomingQueries,proto3" json:"incoming_queries,omitempty"`
	// counts outbound queries dispatched by this peer
	OutgoingQueries      *DHT_QueryGauge `protobuf:"bytes,7,opt,name=outgoing_queries,json=outgoingQueries,proto3" json:"outgoing_queries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *DHT) Reset()         { *m = DHT{} }
func (m *DHT) String() string { return proto.CompactTextString(m) }
func (*DHT) ProtoMessage()    {}
func (*DHT) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce3f8b5eb3c3a1cf, []int{11}
}

func (m *DHT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DHT.Unmarshal(m, b)
}
func (m *DHT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DHT.Marshal(b, m, deterministic)
}
func (m *DHT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DHT.Merge(m, src)
}
func (m *DHT) XXX_Size() int {
	return xxx_messageInfo_DHT.Size(m)
}
func (m *DHT) XXX_DiscardUnknown() {
	xxx_messageInfo_DHT.DiscardUnknown(m)
}

var xxx_messageInfo_DHT proto.InternalMessageInfo

func (m *DHT) GetProtocol() string {
	if m != nil {
		return m.Protocol
	}
	return ""
}

func (m *DHT) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *DHT) GetStartTs() uint64 {
	if m != nil {
		return m.StartTs
	}
	return 0
}

func (m *DHT) GetParams() *DHT_Params {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *DHT) GetBuckets() []*DHT_Bucket {
	if m != nil {
		return m.Buckets
	}
	return nil
}

func (m *DHT) GetIncomingQueries() *DHT_QueryGauge {
	if m != nil {
		return m.IncomingQueries
	}
	return nil
}

func (m *DHT) GetOutgoingQueries() *DHT_QueryGauge {
	if m != nil {
		return m.OutgoingQueries
	}
	return nil
}

type DHT_Params struct {
	// routing table bucket size.
	K uint64 `protobuf:"varint,1,opt,name=k,proto3" json:"k,omitempty"`
	// concurrency of asynchronous requests.
	Alpha uint64 `protobuf:"varint,2,opt,name=alpha,proto3" json:"alpha,omitempty"`
	// number of disjoint paths to use.
	DisjointPaths uint64 `protobuf:"varint,3,opt,name=disjoint_paths,json=disjointPaths,proto3" json:"disjoint_paths,omitempty"`
	// number of peers closest to a target that must have responded
	// in order for a given query path to complete
	Beta                 uint64   `protobuf:"varint,4,opt,name=beta,proto3" json:"beta,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DHT_Params) Reset()         { *m = DHT_Params{} }
func (m *DHT_Params) String() string { return proto.CompactTextString(m) }
func (*DHT_Params) ProtoMessage()    {}
func (*DHT_Params) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce3f8b5eb3c3a1cf, []int{11, 0}
}

func (m *DHT_Params) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DHT_Params.Unmarshal(m, b)
}
func (m *DHT_Params) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DHT_Params.Marshal(b, m, deterministic)
}
func (m *DHT_Params) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DHT_Params.Merge(m, src)
}
func (m *DHT_Params) XXX_Size() int {
	return xxx_messageInfo_DHT_Params.Size(m)
}
func (m *DHT_Params) XXX_DiscardUnknown() {
	xxx_messageInfo_DHT_Params.DiscardUnknown(m)
}

var xxx_messageInfo_DHT_Params proto.InternalMessageInfo

func (m *DHT_Params) GetK() uint64 {
	if m != nil {
		return m.K
	}
	return 0
}

func (m *DHT_Params) GetAlpha() uint64 {
	if m != nil {
		return m.Alpha
	}
	return 0
}

func (m *DHT_Params) GetDisjointPaths() uint64 {
	if m != nil {
		return m.DisjointPaths
	}
	return 0
}

func (m *DHT_Params) GetBeta() uint64 {
	if m != nil {
		return m.Beta
	}
	return 0
}

// Peer in DHT
type DHT_PeerInDHT struct {
	// the peer id of the host system
	PeerId string `protobuf:"bytes,1,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
	// the peer's status when data snapshot is taken
	Status DHT_PeerInDHT_Status `protobuf:"varint,2,opt,name=status,proto3,enum=pb.DHT_PeerInDHT_Status" json:"status,omitempty"`
	// age in bucket (ms)
	AgeInBucket          uint32   `protobuf:"varint,3,opt,name=age_in_bucket,json=ageInBucket,proto3" json:"age_in_bucket,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DHT_PeerInDHT) Reset()         { *m = DHT_PeerInDHT{} }
func (m *DHT_PeerInDHT) String() string { return proto.CompactTextString(m) }
func (*DHT_PeerInDHT) ProtoMessage()    {}
func (*DHT_PeerInDHT) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce3f8b5eb3c3a1cf, []int{11, 1}
}

func (m *DHT_PeerInDHT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DHT_PeerInDHT.Unmarshal(m, b)
}
func (m *DHT_PeerInDHT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DHT_PeerInDHT.Marshal(b, m, deterministic)
}
func (m *DHT_PeerInDHT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DHT_PeerInDHT.Merge(m, src)
}
func (m *DHT_PeerInDHT) XXX_Size() int {
	return xxx_messageInfo_DHT_PeerInDHT.Size(m)
}
func (m *DHT_PeerInDHT) XXX_DiscardUnknown() {
	xxx_messageInfo_DHT_PeerInDHT.DiscardUnknown(m)
}

var xxx_messageInfo_DHT_PeerInDHT proto.InternalMessageInfo

func (m *DHT_PeerInDHT) GetPeerId() string {
	if m != nil {
		return m.PeerId
	}
	return ""
}

func (m *DHT_PeerInDHT) GetStatus() DHT_PeerInDHT_Status {
	if m != nil {
		return m.Status
	}
	return DHT_PeerInDHT_ACTIVE
}

func (m *DHT_PeerInDHT) GetAgeInBucket() uint32 {
	if m != nil {
		return m.AgeInBucket
	}
	return 0
}

// A "k-bucket" containing peers of a certain kadamelia distance
type DHT_Bucket struct {
	// CPL (Common Prefix Length) is the length of the common prefix
	// between the ids of every peer in this bucket and the DHT peer id
	Cpl uint32 `protobuf:"varint,1,opt,name=cpl,proto3" json:"cpl,omitempty"`
	// Peers associated with this bucket
	Peers                []*DHT_PeerInDHT `protobuf:"bytes,2,rep,name=peers,proto3" json:"peers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *DHT_Bucket) Reset()         { *m = DHT_Bucket{} }
func (m *DHT_Bucket) String() string { return proto.CompactTextString(m) }
func (*DHT_Bucket) ProtoMessage()    {}
func (*DHT_Bucket) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce3f8b5eb3c3a1cf, []int{11, 2}
}

func (m *DHT_Bucket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DHT_Bucket.Unmarshal(m, b)
}
func (m *DHT_Bucket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DHT_Bucket.Marshal(b, m, deterministic)
}
func (m *DHT_Bucket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DHT_Bucket.Merge(m, src)
}
func (m *DHT_Bucket) XXX_Size() int {
	return xxx_messageInfo_DHT_Bucket.Size(m)
}
func (m *DHT_Bucket) XXX_DiscardUnknown() {
	xxx_messageInfo_DHT_Bucket.DiscardUnknown(m)
}

var xxx_messageInfo_DHT_Bucket proto.InternalMessageInfo

func (m *DHT_Bucket) GetCpl() uint32 {
	if m != nil {
		return m.Cpl
	}
	return 0
}

func (m *DHT_Bucket) GetPeers() []*DHT_PeerInDHT {
	if m != nil {
		return m.Peers
	}
	return nil
}

// Counters of query events, by status
type DHT_QueryGauge struct {
	// Cumulative counter of queries with "SUCCESS" status
	Success uint64 `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// Cumulative counter of queries with "ERROR" status
	Error uint64 `protobuf:"varint,2,opt,name=error,proto3" json:"error,omitempty"`
	// Cumulative counter of queries with "TIMEOUT" status
	Timeout              uint64   `protobuf:"varint,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DHT_QueryGauge) Reset()         { *m = DHT_QueryGauge{} }
func (m *DHT_QueryGauge) String() string { return proto.CompactTextString(m) }
func (*DHT_QueryGauge) ProtoMessage()    {}
func (*DHT_QueryGauge) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce3f8b5eb3c3a1cf, []int{11, 3}
}

func (m *DHT_QueryGauge) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DHT_QueryGauge.Unmarshal(m, b)
}
func (m *DHT_QueryGauge) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DHT_QueryGauge.Marshal(b, m, deterministic)
}
func (m *DHT_QueryGauge) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DHT_QueryGauge.Merge(m, src)
}
func (m *DHT_QueryGauge) XXX_Size() int {
	return xxx_messageInfo_DHT_QueryGauge.Size(m)
}
func (m *DHT_QueryGauge) XXX_DiscardUnknown() {
	xxx_messageInfo_DHT_QueryGauge.DiscardUnknown(m)
}

var xxx_messageInfo_DHT_QueryGauge proto.InternalMessageInfo

func (m *DHT_QueryGauge) GetSuccess() uint64 {
	if m != nil {
		return m.Success
	}
	return 0
}

func (m *DHT_QueryGauge) GetError() uint64 {
	if m != nil {
		return m.Error
	}
	return 0
}

func (m *DHT_QueryGauge) GetTimeout() uint64 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

// Subsystems encapsulates all instrumented subsystems for a libp2p host.
type Subsystems struct {
	// connections data, source agnostic but currently only supports the Swarm subsystem
	Connections []*Connection `protobuf:"bytes,1,rep,name=connections,proto3" json:"connections,omitempty"`
	// the DHT subsystem.
	Dht                  *DHT     `protobuf:"bytes,2,opt,name=dht,proto3" json:"dht,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Subsystems) Reset()         { *m = Subsystems{} }
func (m *Subsystems) String() string { return proto.CompactTextString(m) }
func (*Subsystems) ProtoMessage()    {}
func (*Subsystems) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce3f8b5eb3c3a1cf, []int{12}
}

func (m *Subsystems) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Subsystems.Unmarshal(m, b)
}
func (m *Subsystems) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Subsystems.Marshal(b, m, deterministic)
}
func (m *Subsystems) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Subsystems.Merge(m, src)
}
func (m *Subsystems) XXX_Size() int {
	return xxx_messageInfo_Subsystems.Size(m)
}
func (m *Subsystems) XXX_DiscardUnknown() {
	xxx_messageInfo_Subsystems.DiscardUnknown(m)
}

var xxx_messageInfo_Subsystems proto.InternalMessageInfo

func (m *Subsystems) GetConnections() []*Connection {
	if m != nil {
		return m.Connections
	}
	return nil
}

func (m *Subsystems) GetDht() *DHT {
	if m != nil {
		return m.Dht
	}
	return nil
}

// Connections and streams output for a time interval is one of these.
type State struct {
	// list of connections
	Subsystems *Subsystems `protobuf:"bytes,1,opt,name=subsystems,proto3" json:"subsystems,omitempty"`
	// overall traffic for this peer
	Traffic *Traffic `protobuf:"bytes,2,opt,name=traffic,proto3" json:"traffic,omitempty"`
	// moment this data snapshot and instantaneous values were taken
	InstantTs uint64 `protobuf:"varint,3,opt,name=instant_ts,json=instantTs,proto3" json:"instant_ts,omitempty"`
	// start of included data collection (cumulative values counted from here)
	StartTs uint64 `protobuf:"varint,4,opt,name=start_ts,json=startTs,proto3" json:"start_ts,omitempty"`
	// length of time up to instant_ts covered by this data snapshot
	SnapshotDurationMs   uint32   `protobuf:"varint,5,opt,name=snapshot_duration_ms,json=snapshotDurationMs,proto3" json:"snapshot_duration_ms,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *State) Reset()         { *m = State{} }
func (m *State) String() string { return proto.CompactTextString(m) }
func (*State) ProtoMessage()    {}
func (*State) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce3f8b5eb3c3a1cf, []int{13}
}

func (m *State) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_State.Unmarshal(m, b)
}
func (m *State) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_State.Marshal(b, m, deterministic)
}
func (m *State) XXX_Merge(src proto.Message) {
	xxx_messageInfo_State.Merge(m, src)
}
func (m *State) XXX_Size() int {
	return xxx_messageInfo_State.Size(m)
}
func (m *State) XXX_DiscardUnknown() {
	xxx_messageInfo_State.DiscardUnknown(m)
}

var xxx_messageInfo_State proto.InternalMessageInfo

func (m *State) GetSubsystems() *Subsystems {
	if m != nil {
		return m.Subsystems
	}
	return nil
}

func (m *State) GetTraffic() *Traffic {
	if m != nil {
		return m.Traffic
	}
	return nil
}

func (m *State) GetInstantTs() uint64 {
	if m != nil {
		return m.InstantTs
	}
	return 0
}

func (m *State) GetStartTs() uint64 {
	if m != nil {
		return m.StartTs
	}
	return 0
}

func (m *State) GetSnapshotDurationMs() uint32 {
	if m != nil {
		return m.SnapshotDurationMs
	}
	return 0
}

// Event
type Event struct {
	// definition of event type, containing only `name` unless this is first encounter of novel event
	Type *EventType `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// time this event occurred (ms since epoch)
	Ts uint64 `protobuf:"varint,2,opt,name=ts,proto3" json:"ts,omitempty"`
	// stringified json; top-level keys and value types match EventProperty definitions
	Content              string   `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce3f8b5eb3c3a1cf, []int{14}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetType() *EventType {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Event) GetTs() uint64 {
	if m != nil {
		return m.Ts
	}
	return 0
}

func (m *Event) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

// ServerMessage wraps messages to be sent to clients to allow extension
// based on new types of data sources
type ServerMessage struct {
	// Version of this protobuf.
	Version *Version `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	// The payload this message contains.
	//
	// Types that are valid to be assigned to Payload:
	//	*ServerMessage_State
	//	*ServerMessage_Runtime
	//	*ServerMessage_Event
	//	*ServerMessage_Response
	//	*ServerMessage_Notice
	Payload              isServerMessage_Payload `protobuf_oneof:"payload"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ServerMessage) Reset()         { *m = ServerMessage{} }
func (m *ServerMessage) String() string { return proto.CompactTextString(m) }
func (*ServerMessage) ProtoMessage()    {}
func (*ServerMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce3f8b5eb3c3a1cf, []int{15}
}

func (m *ServerMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerMessage.Unmarshal(m, b)
}
func (m *ServerMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerMessage.Marshal(b, m, deterministic)
}
func (m *ServerMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerMessage.Merge(m, src)
}
func (m *ServerMessage) XXX_Size() int {
	return xxx_messageInfo_ServerMessage.Size(m)
}
func (m *ServerMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ServerMessage proto.InternalMessageInfo

func (m *ServerMessage) GetVersion() *Version {
	if m != nil {
		return m.Version
	}
	return nil
}

type isServerMessage_Payload interface {
	isServerMessage_Payload()
}

type ServerMessage_State struct {
	State *State `protobuf:"bytes,2,opt,name=state,proto3,oneof"`
}

type ServerMessage_Runtime struct {
	Runtime *Runtime `protobuf:"bytes,3,opt,name=runtime,proto3,oneof"`
}

type ServerMessage_Event struct {
	Event *Event `protobuf:"bytes,4,opt,name=event,proto3,oneof"`
}

type ServerMessage_Response struct {
	Response *CommandResponse `protobuf:"bytes,5,opt,name=response,proto3,oneof"`
}

type ServerMessage_Notice struct {
	Notice *ServerNotice `protobuf:"bytes,6,opt,name=notice,proto3,oneof"`
}

func (*ServerMessage_State) isServerMessage_Payload() {}

func (*ServerMessage_Runtime) isServerMessage_Payload() {}

func (*ServerMessage_Event) isServerMessage_Payload() {}

func (*ServerMessage_Response) isServerMessage_Payload() {}

func (*ServerMessage_Notice) isServerMessage_Payload() {}

func (m *ServerMessage) GetPayload() isServerMessage_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *ServerMessage) GetState() *State {
	if x, ok := m.GetPayload().(*ServerMessage_State); ok {
		return x.State
	}
	return nil
}

func (m *ServerMessage) GetRuntime() *Runtime {
	if x, ok := m.GetPayload().(*ServerMessage_Runtime); ok {
		return x.Runtime
	}
	return nil
}

func (m *ServerMessage) GetEvent() *Event {
	if x, ok := m.GetPayload().(*ServerMessage_Event); ok {
		return x.Event
	}
	return nil
}

func (m *ServerMessage) GetResponse() *CommandResponse {
	if x, ok := m.GetPayload().(*ServerMessage_Response); ok {
		return x.Response
	}
	return nil
}

func (m *ServerMessage) GetNotice() *ServerNotice {
	if x, ok := m.GetPayload().(*ServerMessage_Notice); ok {
		return x.Notice
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ServerMessage) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ServerMessage_State)(nil),
		(*ServerMessage_Runtime)(nil),
		(*ServerMessage_Event)(nil),
		(*ServerMessage_Response)(nil),
		(*ServerMessage_Notice)(nil),
	}
}

// Configuration encapsulates configuration fields for the protocol and commands.
type Configuration struct {
	RetentionPeriodMs       uint64   `protobuf:"varint,1,opt,name=retention_period_ms,json=retentionPeriodMs,proto3" json:"retention_period_ms,omitempty"`
	StateSnapshotIntervalMs uint64   `protobuf:"varint,2,opt,name=state_snapshot_interval_ms,json=stateSnapshotIntervalMs,proto3" json:"state_snapshot_interval_ms,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *Configuration) Reset()         { *m = Configuration{} }
func (m *Configuration) String() string { return proto.CompactTextString(m) }
func (*Configuration) ProtoMessage()    {}
func (*Configuration) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce3f8b5eb3c3a1cf, []int{16}
}

func (m *Configuration) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Configuration.Unmarshal(m, b)
}
func (m *Configuration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Configuration.Marshal(b, m, deterministic)
}
func (m *Configuration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Configuration.Merge(m, src)
}
func (m *Configuration) XXX_Size() int {
	return xxx_messageInfo_Configuration.Size(m)
}
func (m *Configuration) XXX_DiscardUnknown() {
	xxx_messageInfo_Configuration.DiscardUnknown(m)
}

var xxx_messageInfo_Configuration proto.InternalMessageInfo

func (m *Configuration) GetRetentionPeriodMs() uint64 {
	if m != nil {
		return m.RetentionPeriodMs
	}
	return 0
}

func (m *Configuration) GetStateSnapshotIntervalMs() uint64 {
	if m != nil {
		return m.StateSnapshotIntervalMs
	}
	return 0
}

// ClientCommand is a command sent from the client to the server.
type ClientCommand struct {
	Version              *Version              `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Id                   uint64                `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Command              ClientCommand_Command `protobuf:"varint,3,opt,name=command,proto3,enum=pb.ClientCommand_Command" json:"command,omitempty"`
	Source               ClientCommand_Source  `protobuf:"varint,4,opt,name=source,proto3,enum=pb.ClientCommand_Source" json:"source,omitempty"`
	Config               *Configuration        `protobuf:"bytes,5,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ClientCommand) Reset()         { *m = ClientCommand{} }
func (m *ClientCommand) String() string { return proto.CompactTextString(m) }
func (*ClientCommand) ProtoMessage()    {}
func (*ClientCommand) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce3f8b5eb3c3a1cf, []int{17}
}

func (m *ClientCommand) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientCommand.Unmarshal(m, b)
}
func (m *ClientCommand) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientCommand.Marshal(b, m, deterministic)
}
func (m *ClientCommand) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientCommand.Merge(m, src)
}
func (m *ClientCommand) XXX_Size() int {
	return xxx_messageInfo_ClientCommand.Size(m)
}
func (m *ClientCommand) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientCommand.DiscardUnknown(m)
}

var xxx_messageInfo_ClientCommand proto.InternalMessageInfo

func (m *ClientCommand) GetVersion() *Version {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *ClientCommand) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ClientCommand) GetCommand() ClientCommand_Command {
	if m != nil {
		return m.Command
	}
	return ClientCommand_HELLO
}

func (m *ClientCommand) GetSource() ClientCommand_Source {
	if m != nil {
		return m.Source
	}
	return ClientCommand_STATE
}

func (m *ClientCommand) GetConfig() *Configuration {
	if m != nil {
		return m.Config
	}
	return nil
}

// CommandResponse is a response to a command sent by the client.
type CommandResponse struct {
	Id     uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Result CommandResponse_Result `protobuf:"varint,2,opt,name=result,proto3,enum=pb.CommandResponse_Result" json:"result,omitempty"`
	Error  string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	// effective_config is the effective configuration the server holds for
	// this connection. It is returned in response to HELLO and UPDATE_CONFIG
	// commands.
	EffectiveConfig      *Configuration `protobuf:"bytes,4,opt,name=effective_config,json=effectiveConfig,proto3" json:"effective_config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *CommandResponse) Reset()         { *m = CommandResponse{} }
func (m *CommandResponse) String() string { return proto.CompactTextString(m) }
func (*CommandResponse) ProtoMessage()    {}
func (*CommandResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce3f8b5eb3c3a1cf, []int{18}
}

func (m *CommandResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandResponse.Unmarshal(m, b)
}
func (m *CommandResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandResponse.Marshal(b, m, deterministic)
}
func (m *CommandResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandResponse.Merge(m, src)
}
func (m *CommandResponse) XXX_Size() int {
	return xxx_messageInfo_CommandResponse.Size(m)
}
func (m *CommandResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CommandResponse proto.InternalMessageInfo

func (m *CommandResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CommandResponse) GetResult() CommandResponse_Result {
	if m != nil {
		return m.Result
	}
	return CommandResponse_OK
}

func (m *CommandResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *CommandResponse) GetEffectiveConfig() *Configuration {
	if m != nil {
		return m.EffectiveConfig
	}
	return nil
}

// ServerNotice represents a NOTICE sent from the server to the client.
type ServerNotice struct {
	Kind                 ServerNotice_Kind `protobuf:"varint,1,opt,name=kind,proto3,enum=pb.ServerNotice_Kind" json:"kind,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ServerNotice) Reset()         { *m = ServerNotice{} }
func (m *ServerNotice) String() string { return proto.CompactTextString(m) }
func (*ServerNotice) ProtoMessage()    {}
func (*ServerNotice) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce3f8b5eb3c3a1cf, []int{19}
}

func (m *ServerNotice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerNotice.Unmarshal(m, b)
}
func (m *ServerNotice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerNotice.Marshal(b, m, deterministic)
}
func (m *ServerNotice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerNotice.Merge(m, src)
}
func (m *ServerNotice) XXX_Size() int {
	return xxx_messageInfo_ServerNotice.Size(m)
}
func (m *ServerNotice) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerNotice.DiscardUnknown(m)
}

var xxx_messageInfo_ServerNotice proto.InternalMessageInfo

func (m *ServerNotice) GetKind() ServerNotice_Kind {
	if m != nil {
		return m.Kind
	}
	return ServerNotice_DISCARDING_EVENTS
}

func init() {
	proto.RegisterEnum("pb.Status", Status_name, Status_value)
	proto.RegisterEnum("pb.Role", Role_name, Role_value)
	proto.RegisterEnum("pb.EventType_EventProperty_PropertyType", EventType_EventProperty_PropertyType_name, EventType_EventProperty_PropertyType_value)
	proto.RegisterEnum("pb.DHT_PeerInDHT_Status", DHT_PeerInDHT_Status_name, DHT_PeerInDHT_Status_value)
	proto.RegisterEnum("pb.ClientCommand_Source", ClientCommand_Source_name, ClientCommand_Source_value)
	proto.RegisterEnum("pb.ClientCommand_Command", ClientCommand_Command_name, ClientCommand_Command_value)
	proto.RegisterEnum("pb.CommandResponse_Result", CommandResponse_Result_name, CommandResponse_Result_value)
	proto.RegisterEnum("pb.ServerNotice_Kind", ServerNotice_Kind_name, ServerNotice_Kind_value)
	proto.RegisterType((*Version)(nil), "pb.Version")
	proto.RegisterType((*ResultCounter)(nil), "pb.ResultCounter")
	proto.RegisterType((*SlidingCounter)(nil), "pb.SlidingCounter")
	proto.RegisterType((*DataGauge)(nil), "pb.DataGauge")
	proto.RegisterType((*EventType)(nil), "pb.EventType")
	proto.RegisterType((*EventType_EventProperty)(nil), "pb.EventType.EventProperty")
	proto.RegisterType((*Runtime)(nil), "pb.Runtime")
	proto.RegisterType((*EndpointPair)(nil), "pb.EndpointPair")
	proto.RegisterType((*Traffic)(nil), "pb.Traffic")
	proto.RegisterType((*StreamList)(nil), "pb.StreamList")
	proto.RegisterType((*Connection)(nil), "pb.Connection")
	proto.RegisterType((*Connection_Timeline)(nil), "pb.Connection.Timeline")
	proto.RegisterType((*Connection_Attributes)(nil), "pb.Connection.Attributes")
	proto.RegisterType((*Stream)(nil), "pb.Stream")
	proto.RegisterType((*Stream_ConnectionRef)(nil), "pb.Stream.ConnectionRef")
	proto.RegisterType((*Stream_Timeline)(nil), "pb.Stream.Timeline")
	proto.RegisterType((*DHT)(nil), "pb.DHT")
	proto.RegisterType((*DHT_Params)(nil), "pb.DHT.Params")
	proto.RegisterType((*DHT_PeerInDHT)(nil), "pb.DHT.PeerInDHT")
	proto.RegisterType((*DHT_Bucket)(nil), "pb.DHT.Bucket")
	proto.RegisterType((*DHT_QueryGauge)(nil), "pb.DHT.QueryGauge")
	proto.RegisterType((*Subsystems)(nil), "pb.Subsystems")
	proto.RegisterType((*State)(nil), "pb.State")
	proto.RegisterType((*Event)(nil), "pb.Event")
	proto.RegisterType((*ServerMessage)(nil), "pb.ServerMessage")
	proto.RegisterType((*Configuration)(nil), "pb.Configuration")
	proto.RegisterType((*ClientCommand)(nil), "pb.ClientCommand")
	proto.RegisterType((*CommandResponse)(nil), "pb.CommandResponse")
	proto.RegisterType((*ServerNotice)(nil), "pb.ServerNotice")
}

func init() {
	proto.RegisterFile("github.com/libp2p/go-libp2p-core/introspection/pb/introspection.proto", fileDescriptor_ce3f8b5eb3c3a1cf)
}

var fileDescriptor_ce3f8b5eb3c3a1cf = []byte{
	// 2202 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x58, 0xdd, 0x72, 0xdb, 0xc6,
	0x15, 0x16, 0xff, 0xc9, 0xc3, 0x1f, 0x43, 0x9b, 0x64, 0x4c, 0x2b, 0x75, 0x6b, 0x23, 0x4e, 0xa2,
	0x78, 0x1c, 0xda, 0xa6, 0xe3, 0x99, 0xcc, 0x34, 0xcd, 0x8c, 0x24, 0xa2, 0x16, 0x1d, 0x89, 0xa2,
	0x97, 0x94, 0xa7, 0xed, 0x45, 0x31, 0x20, 0xb0, 0x22, 0x51, 0x91, 0x00, 0xba, 0xbb, 0x54, 0xa2,
	0x99, 0x5e, 0xf4, 0x0d, 0xfa, 0x06, 0x7d, 0x86, 0x5e, 0xf7, 0xae, 0x33, 0xbd, 0xea, 0x23, 0xb4,
	0x4f, 0x90, 0xb7, 0xe8, 0x9c, 0xdd, 0x05, 0x08, 0xca, 0x3f, 0x4d, 0xef, 0xf6, 0x9c, 0xef, 0xdb,
	0x83, 0xdd, 0xf3, 0xb7, 0x87, 0x04, 0x67, 0x1e, 0xca, 0xc5, 0x7a, 0xd6, 0xf3, 0xe3, 0xd5, 0xe3,
	0x65, 0x38, 0x4b, 0xfa, 0xc9, 0xe3, 0x79, 0xfc, 0xa5, 0x5e, 0x7d, 0xe9, 0xc7, 0x9c, 0x3d, 0x0e,
	0x23, 0xc9, 0x63, 0x91, 0x30, 0x5f, 0x86, 0x71, 0xf4, 0x38, 0x99, 0x6d, 0x2b, 0x7a, 0x09, 0x8f,
	0x65, 0x4c, 0x8a, 0xc9, 0xcc, 0xfe, 0x04, 0x6a, 0xaf, 0x19, 0x17, 0x61, 0x1c, 0x91, 0x2e, 0xd4,
	0xae, 0xf4, 0xb2, 0x5b, 0xb8, 0x57, 0xd8, 0x6f, 0xd3, 0x54, 0xb4, 0x5f, 0x40, 0x9b, 0x32, 0xb1,
	0x5e, 0xca, 0xa3, 0x78, 0x1d, 0x49, 0xc6, 0xc9, 0x87, 0x50, 0x91, 0xb1, 0xf4, 0x96, 0x86, 0xa8,
	0x05, 0xd2, 0x81, 0x62, 0x7c, 0xd9, 0x2d, 0x2a, 0x55, 0x31, 0xbe, 0x24, 0x16, 0x94, 0x18, 0xe7,
	0xdd, 0x92, 0x52, 0xe0, 0xd2, 0xfe, 0x6b, 0x11, 0x3a, 0x93, 0x65, 0x18, 0x84, 0xd1, 0x3c, 0x35,
	0x75, 0x1b, 0x6a, 0xf1, 0x15, 0xe3, 0xee, 0xd3, 0x95, 0x31, 0x56, 0x45, 0xf1, 0xe9, 0x2a, 0x03,
	0x9e, 0xaf, 0x8c, 0x49, 0x05, 0x3c, 0x5f, 0x91, 0x3b, 0x50, 0xd7, 0x3b, 0x9e, 0xaf, 0x8c, 0x6d,
	0x45, 0x7c, 0x9a, 0x83, 0x9e, 0x3d, 0x59, 0x75, 0xcb, 0x1b, 0xe8, 0xd9, 0x93, 0xdc, 0xae, 0x05,
	0xef, 0x56, 0x72, 0xbb, 0x16, 0x3c, 0x83, 0xfa, 0x0b, 0xde, 0xad, 0x6e, 0xa0, 0x7e, 0x0e, 0xfa,
	0x6a, 0xc1, 0xbb, 0xb5, 0x0d, 0xf4, 0x55, 0x0e, 0xfa, 0x7a, 0xc1, 0xbb, 0xf5, 0x0d, 0xf4, 0xf5,
	0x82, 0x93, 0x8f, 0xa1, 0xa1, 0xbf, 0x85, 0x16, 0x1b, 0x0a, 0x53, 0x5c, 0x94, 0x33, 0xb0, 0x8f,
	0x36, 0x61, 0x03, 0xa2, 0x6c, 0xcf, 0xa0, 0x31, 0xf0, 0xa4, 0xf7, 0xc2, 0x5b, 0xcf, 0x19, 0x32,
	0xfd, 0xf5, 0xca, 0x9d, 0x5d, 0x4b, 0x26, 0x94, 0x73, 0xca, 0xb4, 0xee, 0xaf, 0x57, 0x87, 0x28,
	0x93, 0x5f, 0x40, 0x13, 0xc1, 0xc4, 0xf3, 0x2f, 0x99, 0x14, 0xca, 0x45, 0x65, 0x0a, 0xfe, 0x7a,
	0x35, 0xd6, 0x1a, 0xf4, 0x5f, 0x18, 0x09, 0xe9, 0xce, 0xbe, 0x57, 0x5e, 0x2a, 0xd3, 0x2a, 0x8a,
	0x87, 0xdf, 0xdb, 0xff, 0x28, 0x42, 0xc3, 0xb9, 0x62, 0x91, 0x9c, 0x5e, 0x27, 0x8c, 0x10, 0x28,
	0x47, 0xde, 0x8a, 0x29, 0xfb, 0x0d, 0xaa, 0xd6, 0xe4, 0x10, 0x3a, 0x09, 0x8f, 0x13, 0xc6, 0xe5,
	0xb5, 0x2b, 0xaf, 0x13, 0x86, 0xe6, 0x4b, 0xfb, 0xcd, 0xfe, 0xc7, 0xbd, 0x64, 0xd6, 0xcb, 0xb6,
	0xea, 0xd5, 0xd8, 0x10, 0x69, 0x3b, 0xdd, 0x82, 0x98, 0xd8, 0xfb, 0x4f, 0x01, 0xda, 0x5b, 0x84,
	0xb7, 0x7e, 0xe9, 0x1b, 0x28, 0xe3, 0x07, 0xd4, 0xf1, 0x3b, 0xfd, 0xfd, 0xf7, 0xd8, 0xef, 0x8d,
	0x73, 0xe6, 0xa9, 0xda, 0x45, 0xee, 0x43, 0x6b, 0xe1, 0x09, 0x77, 0xb5, 0x5e, 0xca, 0x30, 0x59,
	0x32, 0x75, 0xcf, 0x3a, 0x6d, 0x2e, 0x3c, 0x71, 0x6a, 0x54, 0xf6, 0x39, 0xb4, 0xf2, 0x1b, 0x09,
	0x40, 0x75, 0x32, 0xa5, 0xc3, 0xd1, 0x0b, 0x6b, 0x07, 0xd7, 0xa3, 0xf3, 0xd3, 0x43, 0x87, 0x5a,
	0x05, 0x52, 0x87, 0xf2, 0x74, 0x78, 0xea, 0x58, 0x80, 0xda, 0xb1, 0xe3, 0xd0, 0xe1, 0xc0, 0x6a,
	0x92, 0x36, 0x34, 0x4e, 0xcf, 0x4f, 0xa6, 0xc3, 0x83, 0xc1, 0x80, 0x5a, 0x2d, 0x24, 0xbd, 0x9c,
	0x9c, 0x8d, 0xac, 0xdf, 0xd9, 0x7f, 0x2b, 0x40, 0x8d, 0xae, 0x23, 0x19, 0xae, 0x18, 0xf9, 0x0c,
	0x3a, 0xe1, 0x2a, 0x59, 0xb2, 0x15, 0x8b, 0xa4, 0x27, 0xd3, 0xf2, 0x69, 0xd0, 0x1b, 0xda, 0x7c,
	0x7d, 0x15, 0x15, 0x21, 0x15, 0xc9, 0x1e, 0xd4, 0x93, 0xa5, 0x27, 0x2f, 0x62, 0xae, 0x33, 0xba,
	0x41, 0x33, 0x19, 0xc3, 0x98, 0x30, 0xc6, 0xdd, 0x30, 0x50, 0x19, 0xdd, 0xa0, 0x55, 0x14, 0x87,
	0x01, 0xe9, 0x41, 0x93, 0xa1, 0x83, 0x4c, 0x84, 0x6a, 0x2a, 0x42, 0xed, 0x2d, 0x0f, 0x52, 0x60,
	0xe9, 0x52, 0xd8, 0xbf, 0x81, 0x96, 0x13, 0x05, 0x49, 0x1c, 0x46, 0x72, 0xec, 0x85, 0x9c, 0x7c,
	0x02, 0x6d, 0xc1, 0x7d, 0xed, 0x3c, 0x2f, 0x08, 0xb8, 0x39, 0x75, 0x4b, 0x70, 0xff, 0x34, 0xd5,
	0x21, 0x29, 0x10, 0x32, 0x47, 0xd2, 0x27, 0x6f, 0x05, 0x42, 0x66, 0x24, 0x7b, 0x0e, 0xb5, 0x29,
	0xf7, 0x2e, 0x2e, 0x42, 0x9f, 0x3c, 0x02, 0x90, 0x7a, 0xe9, 0x86, 0xda, 0x0f, 0xe6, 0x4c, 0x59,
	0x56, 0xd3, 0x86, 0x21, 0x0c, 0x23, 0xbc, 0x42, 0xca, 0x8e, 0xd7, 0x52, 0xd9, 0x7e, 0x83, 0x9e,
	0xda, 0x3b, 0x5b, 0x4b, 0xfb, 0x15, 0xc0, 0x44, 0x72, 0xe6, 0xad, 0x4e, 0x42, 0x21, 0xc9, 0x5d,
	0x00, 0xa1, 0x24, 0x37, 0x0c, 0xb0, 0x3e, 0x4a, 0xfb, 0x2d, 0xda, 0xd0, 0x9a, 0x61, 0x20, 0xc8,
	0x03, 0xa8, 0x69, 0x21, 0xcd, 0x5e, 0x40, 0xc3, 0x7a, 0x3f, 0x4d, 0x21, 0xfb, 0xdf, 0x15, 0x80,
	0xa3, 0x38, 0x8a, 0x74, 0x63, 0xc4, 0x16, 0x16, 0x06, 0xea, 0xdc, 0x2d, 0x5a, 0x0c, 0x83, 0xbc,
	0xf7, 0x8b, 0x5b, 0xde, 0xb7, 0xa1, 0x2a, 0xa4, 0x27, 0xd7, 0x42, 0x05, 0xac, 0x93, 0x1a, 0x47,
	0x0d, 0x35, 0x08, 0xa6, 0xa7, 0xe4, 0x5e, 0x24, 0x92, 0x98, 0xcb, 0x34, 0x7e, 0x2d, 0xda, 0xcc,
	0x74, 0x2a, 0x88, 0x0d, 0x66, 0x82, 0x22, 0x54, 0x5b, 0x6a, 0xf6, 0x2d, 0x15, 0xc2, 0x5c, 0xa4,
	0xe8, 0x86, 0x42, 0x9e, 0x41, 0x1d, 0x73, 0x6e, 0x19, 0x46, 0x4c, 0xb5, 0xaa, 0x66, 0xff, 0x36,
	0xd2, 0x37, 0x37, 0xe8, 0x4d, 0x0d, 0x4c, 0x33, 0x22, 0xf9, 0x19, 0x94, 0x79, 0xbc, 0x64, 0xaa,
	0x81, 0x75, 0xfa, 0x75, 0xdc, 0x40, 0xe3, 0x25, 0xa3, 0x4a, 0x4b, 0x3e, 0x85, 0x9a, 0x71, 0xb1,
	0x6a, 0x63, 0xcd, 0x7e, 0x13, 0x09, 0x26, 0xa0, 0x34, 0xc5, 0xc8, 0x33, 0xa8, 0x79, 0x52, 0xf2,
	0x70, 0x26, 0x54, 0x47, 0x6b, 0xf6, 0xef, 0xdc, 0xf8, 0xf0, 0x81, 0x42, 0xd7, 0x92, 0x09, 0x9a,
	0x32, 0x31, 0x44, 0x4b, 0x4f, 0xb2, 0xc8, 0xbf, 0x76, 0x23, 0xa1, 0x9a, 0x5d, 0x99, 0x36, 0x8c,
	0x66, 0x24, 0xc8, 0xfe, 0x26, 0x44, 0x4d, 0x65, 0xb3, 0xb3, 0x09, 0x11, 0x86, 0x38, 0x0b, 0x13,
	0xb9, 0x03, 0x35, 0x3f, 0x8e, 0x22, 0xf4, 0xa2, 0x85, 0x5e, 0x3c, 0xde, 0xa1, 0x55, 0x54, 0x0c,
	0x03, 0xf2, 0x00, 0xca, 0xb8, 0xea, 0xee, 0x6e, 0x2c, 0x6c, 0x4e, 0x75, 0xbc, 0x43, 0x15, 0x4a,
	0x1e, 0x01, 0x59, 0x0b, 0xc6, 0xdd, 0x84, 0xc7, 0x57, 0x61, 0xc0, 0x02, 0x57, 0x7a, 0x73, 0xd1,
	0xf5, 0xef, 0x95, 0xf6, 0x1b, 0xd4, 0x42, 0x64, 0x6c, 0x80, 0xa9, 0x37, 0x17, 0x7b, 0x2e, 0xd4,
	0x53, 0x3f, 0xaa, 0x77, 0x28, 0x61, 0x91, 0x2b, 0xd3, 0x1e, 0x5c, 0x45, 0x71, 0xaa, 0x3a, 0xf0,
	0x3a, 0x99, 0x73, 0x4f, 0x59, 0xcb, 0x3a, 0x70, 0xaa, 0x9a, 0xe2, 0xa1, 0xeb, 0xfe, 0x32, 0x16,
	0x0c, 0x51, 0xdd, 0x82, 0x6b, 0x4a, 0x9e, 0x8a, 0xbd, 0x11, 0xc0, 0xc6, 0x5f, 0xe4, 0x1e, 0x34,
	0xd3, 0x1e, 0xf6, 0x03, 0x4b, 0x0b, 0x31, 0xaf, 0x22, 0x3f, 0x07, 0x60, 0x91, 0xcf, 0xaf, 0x13,
	0xb9, 0x69, 0x1f, 0x39, 0xcd, 0x61, 0x07, 0x5a, 0x9c, 0x2d, 0xbd, 0x6b, 0x16, 0xb8, 0xf8, 0x96,
	0xbc, 0x2c, 0xd7, 0x5b, 0x96, 0x65, 0xff, 0x58, 0x82, 0xaa, 0xf6, 0xe6, 0x1b, 0x89, 0x8d, 0x2d,
	0x07, 0x87, 0x00, 0x3f, 0x5e, 0x1a, 0x73, 0x99, 0x9c, 0xe5, 0x4b, 0xe9, 0x7f, 0xe5, 0x4b, 0xf9,
	0x3d, 0xf9, 0xf2, 0xc8, 0x84, 0x45, 0x27, 0x75, 0x77, 0x13, 0xd8, 0x5c, 0x74, 0x28, 0xbb, 0x30,
	0xe1, 0x79, 0xfc, 0x46, 0x5e, 0x7f, 0x90, 0xdb, 0xf1, 0x96, 0x9c, 0xde, 0xd4, 0x5f, 0xed, 0x9d,
	0xf5, 0xb7, 0x9d, 0x7d, 0xd6, 0xcd, 0xec, 0xfb, 0xff, 0x52, 0xe2, 0xf7, 0xd0, 0xde, 0x3a, 0x78,
	0x96, 0x77, 0x85, 0xf7, 0xe6, 0x5d, 0x2e, 0x71, 0x8b, 0xdb, 0x89, 0x7b, 0xd8, 0x02, 0xf0, 0xb3,
	0x0d, 0x7b, 0xdf, 0xfe, 0x94, 0x94, 0xcb, 0x67, 0x54, 0x71, 0x2b, 0xa3, 0xec, 0x1f, 0x2b, 0x50,
	0x1a, 0x1c, 0x4f, 0xb7, 0x02, 0x5b, 0xb8, 0x11, 0xd8, 0x2e, 0xd4, 0x58, 0xe4, 0xcd, 0x96, 0x4c,
	0x1f, 0xa6, 0x4e, 0x53, 0x11, 0x0d, 0x0b, 0xe9, 0x71, 0x99, 0x4b, 0x55, 0x25, 0x4f, 0x05, 0xf9,
	0x0c, 0xaa, 0x89, 0xc7, 0xb1, 0x46, 0xcb, 0x9b, 0x9b, 0x0e, 0x8e, 0xa7, 0xbd, 0xb1, 0xd2, 0x52,
	0x83, 0x62, 0x31, 0xcf, 0xd6, 0x7a, 0x18, 0xa9, 0xa8, 0x7e, 0x9b, 0x11, 0x0f, 0x95, 0x9a, 0xa6,
	0x30, 0xf9, 0x15, 0x58, 0x61, 0xe4, 0xc7, 0xab, 0x30, 0x9a, 0xbb, 0x7f, 0x5c, 0x33, 0x1e, 0x32,
	0x61, 0x82, 0x4e, 0xd2, 0x2d, 0xaf, 0xd6, 0x8c, 0x5f, 0xeb, 0x07, 0xe0, 0x56, 0xca, 0x7d, 0xa5,
	0xa9, 0xb8, 0x3d, 0x5e, 0xcb, 0x79, 0x9c, 0xdf, 0x5e, 0x7b, 0xf7, 0xf6, 0x94, 0x6b, 0xb6, 0xef,
	0xcd, 0xa1, 0xaa, 0x4f, 0x4e, 0x5a, 0x50, 0xb8, 0x34, 0x0e, 0x2e, 0x5c, 0xe2, 0x4c, 0xeb, 0x2d,
	0x93, 0x85, 0x67, 0x1c, 0xab, 0x05, 0xf2, 0x29, 0x74, 0x82, 0x50, 0xfc, 0x01, 0xbb, 0xaf, 0x9b,
	0x78, 0x72, 0x91, 0xba, 0xa7, 0x9d, 0x6a, 0xc7, 0xa8, 0xc4, 0xd9, 0x66, 0xc6, 0xa4, 0xa7, 0x5c,
	0x54, 0xa6, 0x6a, 0xbd, 0xf7, 0xf7, 0x02, 0x34, 0xc6, 0xf8, 0x5a, 0x44, 0x18, 0x97, 0xdc, 0x4b,
	0x52, 0xd8, 0x7a, 0x49, 0x9e, 0x64, 0x99, 0xac, 0x87, 0xa0, 0x6e, 0xe6, 0xdf, 0x74, 0xef, 0xcd,
	0xbc, 0xb6, 0xa1, 0xed, 0xcd, 0x99, 0x1b, 0x46, 0xae, 0xf6, 0xa8, 0x99, 0x82, 0x9b, 0xde, 0x9c,
	0x0d, 0x23, 0xed, 0x6c, 0xfb, 0x5b, 0xac, 0x7c, 0xc5, 0x06, 0xa8, 0x1e, 0x1c, 0x4d, 0x87, 0xaf,
	0x1d, 0x6b, 0x87, 0x34, 0xa1, 0x76, 0x3a, 0x9c, 0x4c, 0x70, 0xfc, 0x29, 0x90, 0x16, 0xd4, 0xa9,
	0xf3, 0xd2, 0x39, 0x9a, 0x3a, 0x03, 0xab, 0x88, 0xa3, 0xce, 0xd1, 0xc1, 0x68, 0x30, 0x1c, 0x1c,
	0x4c, 0x1d, 0xab, 0xb4, 0x77, 0x04, 0x55, 0x6d, 0x09, 0xa7, 0x78, 0x3f, 0x49, 0x27, 0x7d, 0x5c,
	0x92, 0xcf, 0xa1, 0x82, 0x67, 0x4f, 0xdf, 0xd5, 0xdd, 0x37, 0x0e, 0x4c, 0x35, 0xbe, 0xf7, 0x1a,
	0x60, 0x13, 0x09, 0xcc, 0x3e, 0xb1, 0xf6, 0x7d, 0x26, 0xd2, 0xac, 0x4e, 0x45, 0x74, 0x3d, 0xe3,
	0x3c, 0xe6, 0xa9, 0xeb, 0x95, 0x80, 0x7c, 0x2c, 0x77, 0x9c, 0x0c, 0x4c, 0x4a, 0x1a, 0xd1, 0xfe,
	0x2d, 0xc0, 0x64, 0x3d, 0x13, 0xd7, 0x42, 0xb2, 0x95, 0x20, 0x4f, 0xa0, 0xb9, 0xa9, 0x23, 0x3d,
	0x08, 0xbc, 0x51, 0x8f, 0x34, 0x4f, 0x21, 0x77, 0xa0, 0x14, 0x2c, 0xd2, 0x79, 0xa3, 0x66, 0x8e,
	0x4f, 0x51, 0x67, 0xff, 0xab, 0x00, 0x15, 0x74, 0x1c, 0x23, 0x3d, 0x00, 0x91, 0x7d, 0x24, 0x5f,
	0xe5, 0x9b, 0x4f, 0xd3, 0x1c, 0x23, 0xdf, 0x17, 0x8b, 0xef, 0xe9, 0x8b, 0x77, 0x01, 0x70, 0x0e,
	0xf7, 0xa2, 0x5c, 0xad, 0x35, 0x8c, 0x46, 0x57, 0x78, 0x56, 0x88, 0xe5, 0xed, 0x42, 0x7c, 0x02,
	0x1f, 0x8a, 0xc8, 0x4b, 0xc4, 0x22, 0x96, 0x6e, 0xb0, 0xe6, 0x6a, 0xa8, 0x74, 0x57, 0xc2, 0xfc,
	0x9a, 0x21, 0x29, 0x36, 0x30, 0xd0, 0xa9, 0xb0, 0xa7, 0x50, 0x51, 0xb3, 0x20, 0xb9, 0x6f, 0xc6,
	0xec, 0xdc, 0x40, 0xb6, 0x19, 0x12, 0xf5, 0x2c, 0xdd, 0x81, 0x62, 0xd6, 0x54, 0x8a, 0x52, 0xa0,
	0xf7, 0xfd, 0x38, 0x92, 0x2c, 0x92, 0x66, 0x24, 0x4d, 0x45, 0xfb, 0x2f, 0x45, 0x68, 0x4f, 0x18,
	0xbf, 0x62, 0xfc, 0x94, 0x09, 0xe1, 0xcd, 0xd5, 0x93, 0x90, 0xff, 0xe5, 0x68, 0xae, 0x6e, 0x7e,
	0x57, 0x6e, 0xc6, 0xdc, 0xfb, 0x50, 0xc1, 0x0c, 0x66, 0xc6, 0x3f, 0x8d, 0xb4, 0x65, 0xb3, 0xe3,
	0x1d, 0xaa, 0x11, 0xf2, 0x39, 0xd4, 0xb8, 0x1e, 0xab, 0xd5, 0x57, 0x8d, 0x25, 0x33, 0x69, 0x1f,
	0xef, 0xd0, 0x14, 0x45, 0x5b, 0x6a, 0xb6, 0x35, 0x4d, 0xa9, 0x91, 0x5d, 0x09, 0x6d, 0x29, 0x84,
	0x3c, 0x85, 0x3a, 0x67, 0x22, 0x89, 0x23, 0xc1, 0xcc, 0x2b, 0xf4, 0x81, 0x4e, 0x8a, 0xd5, 0xca,
	0x8b, 0x02, 0x6a, 0xa0, 0xe3, 0x1d, 0x9a, 0xd1, 0xc8, 0x43, 0xa8, 0x46, 0xb1, 0x0c, 0xfd, 0xf4,
	0x11, 0x52, 0xb3, 0x98, 0xbe, 0xeb, 0x48, 0xe9, 0xb1, 0x7d, 0x6b, 0xc6, 0x61, 0x03, 0x6a, 0x89,
	0x77, 0xbd, 0x8c, 0xbd, 0xc0, 0xfe, 0x93, 0x7a, 0x1b, 0x2e, 0xc2, 0xb9, 0x71, 0x3d, 0xe9, 0xc1,
	0x07, 0x9c, 0xa1, 0xb3, 0x30, 0x44, 0x09, 0xe3, 0x61, 0x1c, 0xb8, 0xab, 0x34, 0xed, 0x77, 0x33,
	0x68, 0xac, 0x90, 0x53, 0x41, 0x7e, 0x09, 0x7b, 0xea, 0xfe, 0x6e, 0x16, 0xe0, 0x10, 0x7f, 0x1c,
	0x5f, 0x79, 0x4b, 0x77, 0x95, 0x06, 0xe5, 0xb6, 0x62, 0x4c, 0x0c, 0x61, 0x68, 0xf0, 0x53, 0x61,
	0xff, 0xb9, 0x04, 0xed, 0xa3, 0x65, 0xc8, 0x22, 0x69, 0xae, 0xf6, 0x53, 0xe3, 0xa1, 0x67, 0x02,
	0x13, 0xf2, 0x30, 0xc0, 0x11, 0xcf, 0xd7, 0x16, 0xcc, 0xd3, 0xaf, 0x47, 0xbc, 0xbc, 0xe9, 0xcc,
	0x7b, 0x29, 0x53, 0xb5, 0xaf, 0x78, 0xcd, 0x7d, 0xa6, 0x22, 0x61, 0xda, 0xd7, 0xf6, 0x9e, 0x89,
	0xc2, 0xa9, 0xe1, 0x91, 0x2f, 0x00, 0x5f, 0xc0, 0x8b, 0x70, 0x6e, 0xa2, 0xb2, 0x6b, 0x4a, 0x75,
	0xe3, 0x3f, 0x6a, 0x08, 0xf6, 0x23, 0xa8, 0xea, 0xcd, 0xa4, 0x01, 0x95, 0xc9, 0x14, 0x5b, 0x93,
	0x6a, 0x62, 0xf4, 0x7c, 0xa4, 0x7e, 0xad, 0x15, 0xb0, 0xbb, 0x39, 0xaf, 0x9d, 0xd1, 0x74, 0x62,
	0x15, 0xed, 0x1f, 0xa0, 0x96, 0x7a, 0xa0, 0x01, 0x95, 0x63, 0xe7, 0xe4, 0xe4, 0xcc, 0xd0, 0x9d,
	0x57, 0xe7, 0xce, 0x64, 0x6a, 0x15, 0xc8, 0x2d, 0x68, 0x8e, 0xcf, 0x27, 0xc7, 0xae, 0x33, 0x3a,
	0x38, 0x3c, 0x71, 0xac, 0x22, 0xb1, 0xa0, 0xa5, 0x14, 0x83, 0xe1, 0x44, 0x69, 0x4a, 0xa4, 0x03,
	0xa0, 0x34, 0xe3, 0x83, 0xf3, 0x89, 0x63, 0x95, 0xb3, 0x2d, 0xd4, 0x99, 0x9c, 0x9f, 0x3a, 0x56,
	0x85, 0xec, 0x42, 0xfb, 0x7c, 0x8c, 0x6d, 0xd2, 0x3d, 0x3a, 0x1b, 0xfd, 0x7a, 0xf8, 0xc2, 0xaa,
	0xd9, 0xff, 0x2c, 0xc0, 0xad, 0x1b, 0x79, 0x95, 0x9b, 0xb8, 0xb4, 0x77, 0xfb, 0x50, 0xe5, 0xea,
	0x4f, 0x14, 0xd3, 0xe7, 0xf7, 0xde, 0x92, 0x8c, 0x3d, 0xfd, 0x37, 0x0b, 0x35, 0xcc, 0x4d, 0x63,
	0xd4, 0x25, 0x68, 0x1a, 0xe3, 0x37, 0x60, 0xb1, 0x8b, 0x0b, 0x6c, 0x66, 0x57, 0xcc, 0x35, 0xae,
	0x2c, 0xbf, 0xcb, 0x95, 0xb7, 0x32, 0xaa, 0xd6, 0xdb, 0x77, 0xa0, 0xaa, 0xbf, 0x42, 0xaa, 0x50,
	0x3c, 0xfb, 0xce, 0xda, 0x21, 0x35, 0x28, 0x39, 0x94, 0x5a, 0x05, 0xfc, 0x89, 0x98, 0x4f, 0x76,
	0xf2, 0x05, 0x94, 0x2f, 0xc3, 0x48, 0x5f, 0xa2, 0xd3, 0xff, 0xe8, 0x66, 0x31, 0xf4, 0xbe, 0x0b,
	0xa3, 0x80, 0x2a, 0x8a, 0x7d, 0x17, 0xca, 0x28, 0x91, 0x8f, 0x60, 0x77, 0x30, 0x9c, 0x1c, 0x1d,
	0xd0, 0xc1, 0x70, 0xf4, 0xc2, 0x35, 0xa1, 0xd9, 0x79, 0xe8, 0xbc, 0xf5, 0x39, 0x02, 0xa8, 0x1e,
	0x9d, 0x9c, 0x4d, 0x9c, 0x81, 0x55, 0xc0, 0x30, 0x9d, 0x8d, 0x9d, 0x11, 0x3e, 0x4d, 0x45, 0x14,
	0x10, 0x40, 0xa1, 0x84, 0xb1, 0x74, 0x28, 0x3d, 0xa3, 0x56, 0xf9, 0xe1, 0x03, 0x28, 0xe3, 0x24,
	0x8a, 0x8f, 0xd5, 0x70, 0x34, 0x9c, 0x0e, 0x0f, 0xa6, 0x67, 0xd4, 0xda, 0x41, 0x91, 0x3a, 0x93,
	0xf1, 0xd9, 0x68, 0x80, 0xbf, 0xe5, 0x67, 0x55, 0x35, 0xf0, 0x3c, 0xfb, 0x6f, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x22, 0xea, 0xe4, 0xe5, 0x27, 0x13, 0x00, 0x00,
}
